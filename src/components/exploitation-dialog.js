import {
  Box,
  Typography,
  Link as MuiLink,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions
} from '@mui/material'

import Modalite from './modalite.js'
import Regles from './regles.js'
import DividerSection from './ui/DividerSection/index.js'

import formatDate from '@/lib/format-date.js'

// Fonction utilitaire pour grouper les règles par document
const groupRulesByDocument = regles => {
  const map = new Map()
  for (const r of regles) {
    const doc = r.document || null
    const docId = doc?.id_document || 'no-doc'
    if (!map.has(docId)) {
      map.set(docId, {
        document: doc,
        rules: []
      })
    }

    map.get(docId).rules.push(r)
  }

  return map
}

const ExploitationDialog = ({exploitation, openModal, handleClose}) => (
  <Dialog fullWidth open={openModal} maxWidth='md' onClose={handleClose}>
    <DialogTitle>Règles &amp; Documents</DialogTitle>
    <DialogContent dividers>
      {exploitation ? (
        <>
          <Typography variant='body1' sx={{mb: 2}}>
            <strong>Exploitation #{exploitation.id_exploitation}</strong>
            {' - '} du {exploitation.date_debut ? formatDate(exploitation.date_debut) : '???'} au{' '}
            {exploitation.date_fin ? formatDate(exploitation.date_fin) : 'en cours'}
          </Typography>

          {exploitation.regles && exploitation.regles.length > 0 ? (
            <>
              {[...groupRulesByDocument(exploitation.regles).values()].map(({document, rules}, idx) => {
                const docLabel = document
                  ? document.nom_fichier
                  : 'Sans document'
                const docReference = document?.reference
                const docSignature = document.date_signature ? formatDate(document.date_signature) : null

                return (
                  <Box key={document?.id_document || idx} sx={{mb: 3}}>
                    <Typography variant='subtitle1' fontWeight='bold'>
                      {docLabel}
                    </Typography>
                    {docReference && (
                      <Typography>
                        <strong>Référence :</strong> {docReference}
                      </Typography>
                    )}
                    {docSignature && (
                      <Typography>
                        <strong>Date signature :</strong> {docSignature}
                      </Typography>
                    )}
                    {document?.urlTelechargement && (
                      <MuiLink
                        href={document.urlTelechargement}
                        target='_blank'
                        rel='noopener'
                        sx={{
                          textDecoration: 'underline', display: 'block', mt: 1, mb: 1
                        }}
                      >
                        Télécharger le document
                      </MuiLink>
                    )}

                    <DividerSection title='Modalités'>
                      {exploitation.modalites?.length > 0
                        ? exploitation.modalites.map(modalite => (
                          <Modalite
                            key={modalite.id_modalite}
                            modalite={modalite}
                          />
                        )) : (
                          <i>Pas de modalités</i>
                        )}
                    </DividerSection>

                    <DividerSection title='Règles'>
                      <Regles regles={rules} />
                    </DividerSection>
                  </Box>
                )
              })}
            </>
          ) : (
            <Typography>Aucune règle pour cette exploitation.</Typography>
          )}
        </>
      ) : (
        <Typography>Veuillez sélectionner une exploitation.</Typography>
      )}
    </DialogContent>
    <DialogActions>
      <Button color='primary' onClick={handleClose}>
        Fermer
      </Button>
    </DialogActions>
  </Dialog>
)

export default ExploitationDialog
