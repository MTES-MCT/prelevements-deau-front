import {Alert} from '@codegouvfr/react-dsfr/Alert'
import Button from '@codegouvfr/react-dsfr/Button'
import {AccountCircle, ExpandMore} from '@mui/icons-material'
import {
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Chip,
  Grid2,
  Typography
} from '@mui/material'

import Document from '@/components/documents/document.js'
import Regles from '@/components/regles.js'
import DividerSection from '@/components/ui/DividerSection/index.js'
import LabelValue from '@/components/ui/LabelValue/index.js'
import formatDate from '@/lib/format-date.js'

const statuts = {
  'En activité': 'primary',
  Terminée: 'success',
  Abandonnée: 'error',
  'non renseigné': ''
}

const ExploitationsListItem = ({exploitation, documents, nomPreleveur, nomPointPrelevement, isExpanded, setIsExpanded, error}) => (
  <Accordion
    expanded={isExpanded}
    onChange={setIsExpanded}
  >
    <AccordionSummary expandIcon={<ExpandMore />}>
      <div className='flex gap-1 sm:gap-5 flex-col sm:flex-row justify-between items-start sm:items-center w-full'>
        <div className='flex-1 flex gap-1'>
          <AccountCircle />
          <Typography className='px-2'>
            <b>{nomPreleveur || nomPointPrelevement}</b>
          </Typography>
          ({exploitation.usages.join(', ')})
        </div>
        <div className='flex-1 flex gap-2 pr-0 sm:pr-3 flex-col sm:flex-row justify-end items-start sm:items-center'>
          <Typography className='px-0 sm:px-2'>
            <i>
              ({formatDate(exploitation.date_debut)} - {formatDate(exploitation.date_fin) || 'en cours '})
            </i>
          </Typography>
          <Chip label={exploitation.statut} color={statuts[exploitation.statut]} />
        </div>
      </div>
    </AccordionSummary>
    <AccordionDetails>
      <div className='flex justify-end p-3'>
        <Button
          priority='secondary'
          size='small'
          iconId='fr-icon-external-link-line'
          linkProps={{
            href: `/exploitations/${exploitation.id_exploitation}`
          }}
        >
          Consulter la fiche
        </Button>
      </div>
      {error && (
        <Alert severity='error' description={error} />
      )}
      <Grid2
        container
        sx={{
          gap: 2,
          justifyContent: 'space-between'
        }}
      >
        <LabelValue label='Raison abandon'>
          {exploitation.raison_abandon}
        </LabelValue>

        <LabelValue label='Remarque'>
          {exploitation.remarque}
        </LabelValue>
      </Grid2>
      <Grid2>
        <DividerSection title='Documents'>
          {documents.map(document => (
            <Document key={document.id_document} document={document} />
          ))}
        </DividerSection>

      </Grid2>
      <Grid2>
        <DividerSection title='Règles'>
          {exploitation.regles.length > 0 ? (
            <Regles
              regles={exploitation.regles}
              documents={exploitation.documents}
            />
          ) : (
            <Typography>Aucune règle</Typography>
          )}
        </DividerSection>
      </Grid2>
    </AccordionDetails>
  </Accordion>
)

export default ExploitationsListItem
